@page
@model Database.Pages.ManageRelationshipsModel
@{
    ViewData["Title"] = "Gestionar Relaciones";
}
@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"> 
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.css">      
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/theme/dracula.min.css">      
    <link rel="stylesheet" href="~/css/style.css" />
}

<div class="modal">
    <div class="modal-header">
        <h2>Gestionar Relaciones</h2>
        <button type="button" class="close-btn" onclick="window.history.back()">×</button>
    </div>

    <form method="post">
        <div class="modal-body">
            @foreach (var table in Model.Tables)
            {
                <div class="table-section">
                    <h3>@table.Name</h3>
                    <label>Clave Primaria</label>
                    <select asp-items="new SelectList(table.Columns.Select(c => c.Name), table.PrimaryKey)" asp-for="@table.PrimaryKey" class="input" onchange="this.form.submit()"></select>

                    <h4>Columnas</h4>
                    @foreach (var col in table.Columns)
                    {
                        <div class="column-row">
                            <span>@col.Name (@col.DataType)</span>
                            <input type="checkbox" asp-for="@col.IsPrimaryKey" onchange="this.form.submit()" /> PK
                            <input type="checkbox" asp-for="@col.IsForeignKey" onchange="this.form.submit()" /> FK
                            @if (col.IsForeignKey)
                            {
                                <select asp-items="new SelectList(Model.Tables.Where(t => t.Name != table.Name).Select(t => t.Name), col.ReferenceTable)" asp-for="@col.ReferenceTable" class="input" style="width: 120px;" onchange="this.form.submit()"></select>
                                <select asp-items="new SelectList(Model.Tables.FirstOrDefault(t => t.Name == col.ReferenceTable)?.Columns.Select(c => c.Name) ?? new List<string>(), col.ReferenceColumn)" asp-for="@col.ReferenceColumn" class="input" style="width: 120px;" onchange="this.form.submit()"></select>
                            }
                        </div>
                    }
                </div>
            }

            <button type="submit" class="create-btn">Guardar Cambios</button>
        </div>
    </form>

    @if (!string.IsNullOrEmpty(Model.SqlResult))
    {
        <div class="sql-result">
            <pre>@Model.SqlResult</pre>
        </div>
    }

    <div class="diagram">
        <h3>Diagrama de Relaciones</h3>
        <div class="diagram-container">
            @foreach (var table in Model.Tables)
            {
                <div class="table-box" style="left: @(100 * Model.Tables.IndexOf(table))px;">
                    <h4>@table.Name</h4>
                    <ul>
                        @foreach (var col in table.Columns)
                        {
                            <li>@col.Name @(col.IsPrimaryKey ? "(PK)" : "") @(col.IsForeignKey ? $"(FK -> {col.ReferenceTable}.{col.ReferenceColumn})" : "")</li>
                        }
                    </ul>
                    @if (!string.IsNullOrEmpty(table.PrimaryKey))
                    {
                        <div class="pk-indicator">PK: @table.PrimaryKey</div>
                    }
                </div>
            }
            <!-- Líneas de relación dinámicas -->
            @foreach (var table in Model.Tables)
            {
                foreach (var col in table.Columns)
                {
                    if (col.IsForeignKey && !string.IsNullOrEmpty(col.ReferenceTable) && !string.IsNullOrEmpty(col.ReferenceColumn))
                    {
                        var refTable = Model.Tables.FirstOrDefault(t => t.Name == col.ReferenceTable);
                        if (refTable != null)
                        {
                            int sourceIndex = Model.Tables.IndexOf(table);
                            int targetIndex = Model.Tables.IndexOf(refTable);
                            <div class="relation-line" style="left: @(100 * sourceIndex + 100)px; width: @(100 * (targetIndex - sourceIndex))px;"></div>
                        }
                    }
                }
            }
        </div>
    </div>
</div>