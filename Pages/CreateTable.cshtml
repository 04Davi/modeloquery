@page
@model Database.Pages.CreateTableModel
@{
    ViewData["Title"] = "Crear Nueva Tabla";
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"> 
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.css">      
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/theme/dracula.min.css">      
    <link rel="stylesheet" href="~/css/style.css" />
}
<div class="modal">
    <!-- Encabezado -->
    <div class="modal-header">
        <h2>Crear Nueva Tabla</h2>
       <button type="button" class="close-btn" onclick="window.location.href='/Dashboard'" title="Regresar" >
            <i class="fas fa-arrow-left"></i>
         </button>   
    </div>

    <!-- Formulario -->
    <form method="post">
        <div class="modal-body">
            <label>Nombre de la tabla</label>
            <input type="text" asp-for="TableName" placeholder="Ej: usuarios" class="input" required />

            <h4>Campos de la tabla</h4>
            <table class="fields-table">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Tipo</th>
                        <th>Longitud</th>
                        <th>Nulo</th>
                        <th>Clave primaria</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Columns.Count; i++)
                    {
                        <tr>
                            <td>
                                <input asp-for="Columns[@i].Name" class="input field-name" />
                            </td>
                            <td>
                                <select asp-for="Columns[@i].DataType" class="input datatype-select" data-index="@i">
                                    <option>INT</option>
                                    <option>VARCHAR</option>
                                    <option>NVARCHAR</option>
                                    <option>CHAR</option>
                                    <option>NCHAR</option>
                                    <option>DATE</option>
                                    <option>FLOAT</option>
                                    <option>BIT</option>
                                    <option>DECIMAL</option>
                                </select>
                            </td>
                            <td>
                                <input asp-for="Columns[@i].Length" class="input length-input" data-index="@i"
                                       placeholder="Ej. 255 o MAX" />
                            </td>
                            <td style="text-align:center;">
                                <input asp-for="Columns[@i].AllowNull" type="checkbox" />
                            </td>
                            <td style="text-align:center;">
                                <input asp-for="Columns[@i].IsPrimaryKey" type="checkbox" />
                            </td>
                            <td>
                                <button type="submit" formaction="?handler=RemoveColumn" name="removeIndex" value="@i"
                                        class="delete-btn">
                                    Eliminar
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <button type="submit" formaction="?handler=AddColumn" class="add-btn">+ Añadir campo</button>
        </div>

        <!-- Pie del formulario -->
        <div class="modal-footer">
            <button type="button" class="cancel-btn" onclick="window.history.back()">Cancelar</button>
            <button type="submit" formaction="?handler=CreateTable" class="create-btn">Crear Tabla</button>
        </div>
    </form>

    <!-- Mostrar resultado SQL si existe -->
    @if (!string.IsNullOrEmpty(Model.SqlResult))
    {
        <div class="sql-result">
            <pre>@Model.SqlResult</pre>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Configuración por tipo de dato
        const typeConfig = {
            'INT': { requiresLength: false, placeholder: 'No aplica' },
            'VARCHAR': { requiresLength: true, placeholder: 'Ej. 255 o MAX' },
            'NVARCHAR': { requiresLength: true, placeholder: 'Ej. 255 o MAX' },
            'CHAR': { requiresLength: true, placeholder: 'Ej. 1' },
            'NCHAR': { requiresLength: true, placeholder: 'Ej. 1' },
            'DATE': { requiresLength: false, placeholder: 'No aplica' },
            'FLOAT': { requiresLength: false, placeholder: 'No aplica' },
            'BIT': { requiresLength: false, placeholder: 'No aplica' },
            'DECIMAL': { requiresLength: true, placeholder: 'Ej. 10,2' }
        };

        function updateLengthInputs() {
            document.querySelectorAll('.datatype-select').forEach(select => {
                const index = select.dataset.index;
                const selectedType = select.value.toUpperCase();
                const lengthInput = document.querySelector(.length-input[data-index='${index}']);

                if (typeConfig[selectedType] && typeConfig[selectedType].requiresLength) {
                    lengthInput.style.display = 'inline-block';
                    lengthInput.placeholder = typeConfig[selectedType].placeholder;
                    lengthInput.required = true;
                } else {
                    lengthInput.style.display = 'none';
                    lengthInput.value = '';
                    lengthInput.required = false;
                }

                // Validaciones en tiempo real
                lengthInput.addEventListener('input', function (e) {
                    const value = e.target.value.trim();
                    if (selectedType === 'DECIMAL' && value && !/^\d+,\d+$/.test(value)) {
                        e.target.setCustomValidity('Formato inválido. Use \'precision,scale\' (e.g., \'10,2\').');
                    } else if (['VARCHAR', 'NVARCHAR'].includes(selectedType) && value && !/^\d+$|^MAX$/i.test(value)) {
                        e.target.setCustomValidity('Longitud inválida. Use un número entero o \'MAX\'.');
                    } else if (['CHAR', 'NCHAR'].includes(selectedType) && value && !/^\d+$/.test(value)) {
                        e.target.setCustomValidity('Longitud debe ser un número entero.');
                    } else {
                        e.target.setCustomValidity('');
                    }
                });
            });
        }

        // Asignar eventos iniciales
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.datatype-select').forEach(select => {
                select.addEventListener('change', updateLengthInputs);
            });

            updateLengthInputs(); // Inicializar configuración al cargar
        });
    </script>
}